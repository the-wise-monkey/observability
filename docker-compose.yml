# =========================================
# Observability Stack - Docker Compose
# =========================================
# 
# This docker-compose file defines a complete observability stack including:
# - Prometheus (metrics collection)
# - Grafana (visualization & dashboards) 
# - Loki + Promtail (log aggregation)
# - Consul (service discovery)
# - Blackbox Exporter (endpoint monitoring)
# - Nginx (reverse proxy)
# - Metabase (business intelligence)
# - Sentry (error tracking and performance monitoring)
#
# Usage:
#   docker compose up -d           # Start all services
#   docker compose down            # Stop all services  
#   docker compose logs -f <svc>   # View service logs
#   ./manage                       # Interactive setup
#
# Port mappings:
#   80    - Nginx (reverse proxy to all services)
#   3000  - Grafana (http://localhost/grafana)
#   3030  - Metabase (http://localhost/metabase) 
#   3100  - Loki (log ingestion)
#   8500  - Consul (http://localhost/consul)
#   9080  - Promtail (log collection)
#   9090  - Prometheus (http://localhost/prometheus)
#   9115  - Blackbox Exporter (http://localhost/blackbox)
#   9000  - Sentry Web (http://localhost/sentry)
#   9001  - Sentry Worker
#   9002  - Sentry Cron
#   5432  - PostgreSQL (Sentry database)
#   6379  - Redis (Sentry cache/queue)
#
# =========================================

services:
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: blackbox-exporter
    restart: unless-stopped
    volumes:
      - ./blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    command:
      - '--config.file=/etc/blackbox_exporter/config.yml'
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.blackbox.rule=Host(`blackbox.0xfutbol.com`)"
      - "traefik.http.routers.blackbox.entrypoints=websecure"
      - "traefik.http.routers.blackbox.tls.certresolver=letsencrypt"
      - "traefik.http.services.blackbox.loadbalancer.server.port=9115"

  consul:
    image: hashicorp/consul:latest
    container_name: consul
    restart: unless-stopped
    volumes:
      - ./consul/consul.hcl:/consul/config/consul.hcl:ro
      - consul-data:/consul/data
    command:
      - 'consul'
      - 'agent'
      - '-config-file=/consul/config/consul.hcl'
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.consul.rule=Host(`consul.0xfutbol.com`)"
      - "traefik.http.routers.consul.entrypoints=websecure"
      - "traefik.http.routers.consul.tls.certresolver=letsencrypt"
      - "traefik.http.services.consul.loadbalancer.server.port=8500"

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.0xfutbol.com`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
      - GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL:-https://grafana.0xfutbol.com}
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - loki

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/loki
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml:ro
    networks:
      - dokploy-network

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    restart: unless-stopped
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.metabase.rule=Host(`metabase.0xfutbol.com`)"
      - "traefik.http.routers.metabase.entrypoints=websecure"
      - "traefik.http.routers.metabase.tls.certresolver=letsencrypt"
      - "traefik.http.services.metabase.loadbalancer.server.port=3000"
    environment:
      - MB_DB_TYPE=${MB_DB_TYPE:-postgres}
      - MB_DB_CONNECTION_URI=${MB_DB_CONNECTION_URI}
      - MB_SITE_URL=${MB_SITE_URL:-https://metabase.0xfutbol.com}
    volumes:
      - metabase-data:/metabase.db

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=200h'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.external-url=http://localhost/prometheus/'
      - '--web.route-prefix=/'
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.0xfutbol.com`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    volumes:
      - /var/log:/var/log:ro
      - ./promtail/promtail-config.yaml:/etc/promtail/config.yaml:ro
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    networks:
      - dokploy-network

  sentry-cron:
    image: getsentry/sentry:latest
    container_name: sentry-cron
    restart: unless-stopped
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: sentry-postgres
      SENTRY_POSTGRES_PORT: 5432
      SENTRY_DB_NAME: sentry
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: ${SENTRY_DB_PASSWORD:-sentry}
      SENTRY_REDIS_HOST: sentry-redis
      SENTRY_REDIS_PORT: 6379
      SENTRY_MAIL_HOST: ${SENTRY_MAIL_HOST:-localhost}
      SENTRY_MAIL_PORT: ${SENTRY_MAIL_PORT:-25}
      SENTRY_MAIL_USERNAME: ${SENTRY_MAIL_USERNAME}
      SENTRY_MAIL_PASSWORD: ${SENTRY_MAIL_PASSWORD}
      SENTRY_MAIL_USE_TLS: ${SENTRY_MAIL_USE_TLS:-false}
      SENTRY_SERVER_EMAIL: ${SENTRY_SERVER_EMAIL:-sentry@localhost}
      SENTRY_URL_PREFIX: ${SENTRY_URL_PREFIX:-https://sentry.0xfutbol.com}
      SENTRY_ALLOWED_HOSTS: ${SENTRY_ALLOWED_HOSTS:-localhost,127.0.0.1}
      SENTRY_DEBUG: ${SENTRY_DEBUG:-false}
    volumes:
      - ./sentry/sentry.conf.py:/etc/sentry/sentry.conf.py:ro
      - sentry-data:/var/lib/sentry/files
    depends_on:
      - sentry-postgres
      - sentry-redis
    command: run cron
    networks:
      - dokploy-network

  sentry-postgres:
    image: postgres:15-alpine
    container_name: sentry-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sentry
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: ${SENTRY_DB_PASSWORD:-sentry}
    volumes:
      - sentry-postgres:/var/lib/postgresql/data
    networks:
      - dokploy-network

  sentry-redis:
    image: redis:7-alpine
    container_name: sentry-redis
    restart: unless-stopped
    volumes:
      - sentry-redis:/data
    networks:
      - dokploy-network

  sentry-web:
    image: getsentry/sentry:latest
    container_name: sentry-web
    restart: unless-stopped
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: sentry-postgres
      SENTRY_POSTGRES_PORT: 5432
      SENTRY_DB_NAME: sentry
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: ${SENTRY_DB_PASSWORD:-sentry}
      SENTRY_REDIS_HOST: sentry-redis
      SENTRY_REDIS_PORT: 6379
      SENTRY_MAIL_HOST: ${SENTRY_MAIL_HOST:-localhost}
      SENTRY_MAIL_PORT: ${SENTRY_MAIL_PORT:-25}
      SENTRY_MAIL_USERNAME: ${SENTRY_MAIL_USERNAME}
      SENTRY_MAIL_PASSWORD: ${SENTRY_MAIL_PASSWORD}
      SENTRY_MAIL_USE_TLS: ${SENTRY_MAIL_USE_TLS:-false}
      SENTRY_SERVER_EMAIL: ${SENTRY_SERVER_EMAIL:-sentry@localhost}
      SENTRY_URL_PREFIX: ${SENTRY_URL_PREFIX:-https://sentry.0xfutbol.com}
      SENTRY_ALLOWED_HOSTS: ${SENTRY_ALLOWED_HOSTS:-localhost,127.0.0.1}
      SENTRY_DEBUG: ${SENTRY_DEBUG:-false}
    volumes:
      - ./sentry/sentry.conf.py:/etc/sentry/sentry.conf.py:ro
      - sentry-data:/var/lib/sentry/files
    depends_on:
      - sentry-postgres
      - sentry-redis
    command: run web
    networks:
      - dokploy-network

  sentry-worker:
    image: getsentry/sentry:latest
    container_name: sentry-worker
    restart: unless-stopped
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: sentry-postgres
      SENTRY_POSTGRES_PORT: 5432
      SENTRY_DB_NAME: sentry
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: ${SENTRY_DB_PASSWORD:-sentry}
      SENTRY_REDIS_HOST: sentry-redis
      SENTRY_REDIS_PORT: 6379
      SENTRY_MAIL_HOST: ${SENTRY_MAIL_HOST:-localhost}
      SENTRY_MAIL_PORT: ${SENTRY_MAIL_PORT:-25}
      SENTRY_MAIL_USERNAME: ${SENTRY_MAIL_USERNAME}
      SENTRY_MAIL_PASSWORD: ${SENTRY_MAIL_PASSWORD}
      SENTRY_MAIL_USE_TLS: ${SENTRY_MAIL_USE_TLS:-false}
      SENTRY_SERVER_EMAIL: ${SENTRY_SERVER_EMAIL:-sentry@localhost}
      SENTRY_URL_PREFIX: ${SENTRY_URL_PREFIX:-https://sentry.0xfutbol.com}
      SENTRY_ALLOWED_HOSTS: ${SENTRY_ALLOWED_HOSTS:-localhost,127.0.0.1}
      SENTRY_DEBUG: ${SENTRY_DEBUG:-false}
    volumes:
      - ./sentry/sentry.conf.py:/etc/sentry/sentry.conf.py:ro
      - sentry-data:/var/lib/sentry/files
    depends_on:
      - sentry-postgres
      - sentry-redis
    command: run worker
    networks:
      - dokploy-network

networks:
  dokploy-network:
    external: true

volumes:
  consul-data:
  grafana-data:
  loki-data:
  metabase-data:
  prometheus-data:
  sentry-data:
  sentry-postgres:
  sentry-redis: