# =========================================
# Prometheus Configuration
# =========================================
#
# This file configures Prometheus for the observability stack with:
# - Service discovery via Consul
# - Blackbox monitoring for HTTP/TCP endpoints  
# - Self-monitoring of stack components
# - Automatic target discovery with proper labeling
#
# Service Discovery Strategy:
# - Consul SD for dynamic service discovery
# - Static configs for core infrastructure
# - Blackbox exporter for endpoint health checks
# - Tag-based filtering for monitoring scope
#
# =========================================

global:
  scrape_interval: 15s       # How frequently to scrape targets
  evaluation_interval: 15s   # How frequently to evaluate rules

rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Scrape Grafana metrics if available
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # Add Loki metrics if available
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # Add Promtail metrics if available
  - job_name: 'promtail'
    static_configs:
      - targets: ['promtail:9080']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # Add Sentry metrics if available
  - job_name: 'sentry-web'
    static_configs:
      - targets: ['sentry-web:9000']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # Add PostgreSQL metrics if available
  - job_name: 'sentry-postgres'
    static_configs:
      - targets: ['sentry-postgres:5432']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # Add Redis metrics if available
  - job_name: 'sentry-redis'
    static_configs:
      - targets: ['sentry-redis:6379']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # Add nginx metrics if nginx-prometheus-exporter is available
  # - job_name: 'nginx'
  #   static_configs:
  #     - targets: ['nginx:9113']
  #   scrape_interval: 30s

  # Blackbox exporter for HTTP endpoint monitoring
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]  # Look for a HTTP 200 response
    consul_sd_configs:
      - server: 'consul:8500'
        datacenter: 'dc1'
        tags: ['http-monitor']  # Only monitor services with this tag
    relabel_configs:
      # Construct the target URL from Consul metadata
      - source_labels: [__meta_consul_service_address, __meta_consul_service_port, __meta_consul_service_metadata_health_path]
        target_label: __param_target
        replacement: 'http://${1}:${2}${3}'
        regex: '([^:]+);(\d+);(.+)'
      # Fallback for services without custom health path - use default /health
      - source_labels: [__meta_consul_service_address, __meta_consul_service_port]
        target_label: __param_target
        replacement: 'http://${1}:${2}/health'
        regex: '([^:]+);(\d+)'
      # Use the constructed target as instance label
      - source_labels: [__param_target]
        target_label: instance
      # Point to blackbox exporter
      - target_label: __address__
        replacement: blackbox-exporter:9115
      # Add service name as a label
      - source_labels: [__meta_consul_service]
        target_label: service
      # Add service tags as labels
      - source_labels: [__meta_consul_tags]
        target_label: tags

  # Blackbox exporter for TCP port monitoring  
  - job_name: 'blackbox-tcp'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    consul_sd_configs:
      - server: 'consul:8500'
        datacenter: 'dc1'
        tags: ['tcp-monitor']  # Only monitor services with this tag
    relabel_configs:
      # Construct target from service address and port
      - source_labels: [__meta_consul_service_address, __meta_consul_service_port]
        target_label: __param_target
        replacement: '${1}:${2}'
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
      # Add service name as a label
      - source_labels: [__meta_consul_service]
        target_label: service
      # Add service tags as labels
      - source_labels: [__meta_consul_tags]
        target_label: tags

  # Blackbox exporter self-monitoring
  - job_name: 'blackbox-exporter'
    static_configs:
      - targets: ['blackbox-exporter:9115']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # Consul metrics
  - job_name: 'consul'
    static_configs:
      - targets: ['consul:8500']
    scrape_interval: 30s
    metrics_path: '/v1/agent/metrics'
    params:
      format: ['prometheus']

  # Service discovery via Consul
  - job_name: 'consul-services'
    consul_sd_configs:
      - server: 'consul:8500'
        datacenter: 'dc1'
    relabel_configs:
      # Only scrape services that have a 'prometheus' tag
      - source_labels: [__meta_consul_tags]
        regex: '.*,prometheus,.*'
        action: keep
      # Use the service name as the job label
      - source_labels: [__meta_consul_service]
        target_label: job
      # Use the service address and port
      - source_labels: [__meta_consul_service_address, __meta_consul_service_port]
        regex: '([^:]+):?(\d+)?'
        target_label: __address__
        replacement: '${1}:${2}' 